---
layout: posts
title: Proper upgrade testing
---

h2. <a href="{{ page.url }}">{{ page.title }}</a>

h4. {{ page.date | date_to_long_string }}

<p>
	Plasma has a non-trivial database: multiple tables which while can't just be dropped and recreated for every database upgrade. 
</p>
<p>
	I'm pretty particular about what changes go into the schema and how I will test it so when I added multiple account support I ran into some significant issues (will be followed up with in another blog post).
</p>

<p>
	One of the errors I introduced was a bad upgrade. 
  I wrote a manual update sql statement, which was wrong (not only was the sql wrong but the fact that I wrote a manual one should have been a smell at the time). 
  This led to the user's previous account details being lost and having to re-add the details. Not the worst bug but not a good experience. 
  During all my testing I was doing this: 
  </p>
  <span class="code">
  git checkout master 
  </span>
  <span class="code"> build and install via eclipse  </span>
  <span class="code"> git checkout upgrade-branch  </span>
  <span class="code"> build and install via eclipse  </span>

<p>
Now, the only issue with this kind of install & test is that the upgrade methods: <span class="code">onUpgrade(SQLiteDatabase database, int oldVersion,int newVersion)   </span> did not get called. So, my horrible sql was never executed. 
</p>

<p>
I did not notice this error until the app update was published and on my second device I ran into it. (Protip for another post: always have a test app with the latest <strong>published</strong> version.) 
</p>

After much digging and I admit, a bit of panicking, I determined the line and cause and replace that horribleness with a proper call:

before:
<div class="code">
database.execSQL('UPDAET ' + ACCOUNTS_TABLE_NAME + ' SET (' + ACCOUNT_ACTIVE + '=?, ' + ACCOUNT_DELETED + '=?)' + ' VALUES(true,false)'  );
 </div>
after:
<div class="code">
ContentValues values = new ContentValues();
values.put(DataStore.ACCOUNT_ACTIVE, Boolean.toString(true));
values.put(DataStore.ACCOUNT_DELETED, Boolean.toString(false));
database.update(ACCOUNTS_TABLE_NAME, values, null, null);  
 </div>


<p>
  Quiz: why was the onUpgrade never hit? The database was never downgraded with how I was installed 'old versions' of the app. 
</p>

<p>
  So, now I do things a bit differently when I do database upgrades. 
  <span class="code"> adb uninstall plasma.apk  </span>
  <span class="code"> adb install plasma-oldversion.apk </span>
  <span class="code"> adb install plasma-newversion.apk  </span>
  
</p>

Hope this helps you out :) 

Comments? Feedback? Find me on G+ (link above).